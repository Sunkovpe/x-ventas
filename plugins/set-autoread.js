import fs from 'fs'
import path from 'path'
import { join } from 'path'

let handler = async (m, { conn, usedPrefix, command, text, args }) => {
  const botActual = conn.user?.jid?.split('@')[0].replace(/\D/g, '')
  const configPath = join('./Serbot', botActual, 'config.json')

  let nombreBot = global.namebot || 'X ADM'

  if (fs.existsSync(configPath)) {
    try {
      const config = JSON.parse(fs.readFileSync(configPath, 'utf-8'))
      if (config.name) nombreBot = config.name
    } catch (err) {}
  }

  const senderNumber = m.sender.replace(/[^0-9]/g, '')
  const botPath = path.join('./Serbot', senderNumber)

  if (!fs.existsSync(botPath)) {
    return conn.reply(m.chat, `¬øHola, c√≥mo te va?\n\n* No encontr√© una sesi√≥n activa vinculada a tu n√∫mero\n\n* Puede que a√∫n no te hayas conectado\n\n* Si deseas iniciar una nueva, estar√© aqu√≠ para ayudarte\n\n> X ADM`, m, rcanal)
  }

  const configPathUser = path.join(botPath, 'config.json')
  let config = {}

  if (fs.existsSync(configPathUser)) {
    try {
      config = JSON.parse(fs.readFileSync(configPathUser))
    } catch {}
  }

  
  if (!text) {
    const autoReadStatus = config.autoRead !== false ? 'Activado ‚úÖ' : 'Desactivado ‚ùå'
    return conn.reply(m.chat, `‚ï≠‚îÄ„Äå ‚ú¶ ìÜ©üìñìÜ™ ·¥Ä·¥ú·¥õ·¥è- ü·¥á·¥á Ä ‚ú¶ „Äç‚îÄ‚ïÆ
‚îÇ
‚ï∞‚û∫ ‚úß *Estado actual:* ${autoReadStatus}
‚îÇ
‚ï∞‚û∫ ‚úß *Comandos disponibles:*
‚ï∞‚û∫ ‚úß *.setautoread on* - Activar auto-leer
‚ï∞‚û∫ ‚úß *.setautoread off* - Desactivar auto-leer
‚îÇ
‚ï∞‚û∫ ‚úß *¬øQu√© hace el auto-leer?*
‚ï∞‚û∫ ‚úß Marca autom√°ticamente los mensajes como le√≠dos
‚ï∞‚û∫ ‚úß Aparece el doble check azul en WhatsApp

> X ADM`, m, rcanal)
  }

  const action = text.toLowerCase().trim()

  if (action === 'on' || action === 'activar' || action === 'enable') {
    config.autoRead = true
    await conn.reply(m.chat, `‚ï≠‚îÄ„Äå ‚ú¶ ìÜ©‚úÖìÜ™ ·¥Ä·¥ú·¥õ·¥è- ü·¥á·¥á Ä ·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥Ö·¥è ‚ú¶ „Äç‚îÄ‚ïÆ
‚îÇ
‚ï∞‚û∫ ‚úß *Auto-leer:* Activado ‚úÖ
‚ï∞‚û∫ ‚úß *Ahora tu sub-bot marcar√° autom√°ticamente los mensajes como le√≠dos*
‚ï∞‚û∫ ‚úß *Aparecer√° el doble check azul en todos los chats*

> X ADM`, m, rcanal)
  } else if (action === 'off' || action === 'desactivar' || action === 'disable') {
    config.autoRead = false
    await conn.reply(m.chat, `‚ï≠‚îÄ„Äå ‚ú¶ ìÜ©‚ùåìÜ™ ·¥Ä·¥ú·¥õ·¥è- ü·¥á·¥á Ä ·¥Ö·¥ás·¥Ä·¥Ñ·¥õ…™·¥†·¥Ä·¥Ö·¥è ‚ú¶ „Äç‚îÄ‚ïÆ
‚îÇ
‚ï∞‚û∫ ‚úß *Auto-leer:* Desactivado ‚ùå
‚ï∞‚û∫ ‚úß *Tu sub-bot ya no marcar√° autom√°ticamente los mensajes como le√≠dos*
‚ï∞‚û∫ ‚úß *Los mensajes mantendr√°n el check gris*

> X ADM`, m, rcanal)
  } else {
    return conn.reply(m.chat, `‚ï≠‚îÄ„Äå ‚ú¶ ìÜ©‚ùììÜ™ ·¥ús·¥è ·¥Ñ·¥è Ä Ä·¥á·¥Ñ·¥õ·¥è ‚ú¶ „Äç‚îÄ‚ïÆ
‚îÇ
‚ï∞‚û∫ ‚úß *Comandos v√°lidos:*
‚ï∞‚û∫ ‚úß *.setautoread on* - Activar
‚ï∞‚û∫ ‚úß *.setautoread off* - Desactivar
‚ï∞‚û∫ ‚úß *.setautoread* - Ver estado actual

> X ADM`, m, rcanal)
  }

  try {
    fs.writeFileSync(configPathUser, JSON.stringify(config, null, 2))
  } catch (error) {
    console.error('Error guardando configuraci√≥n de auto-leer:', error)
    await conn.reply(m.chat, `‚ùå Error al guardar la configuraci√≥n. Int√©ntalo nuevamente.`, m, rcanal)
  }
}

handler.help = ['setautoread <on/off>']
handler.tags = ['serbot']
handler.command = ['setautoread']

export default handler 